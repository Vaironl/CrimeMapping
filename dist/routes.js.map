{"version":3,"sources":["../app/JavaScripts/routes.js"],"names":["MongoClient","require","url","dbName","collectionName","console","collection","client","crimes","result","module","app","query","User","res","newuser","req"],"mappings":"cACA;;AACA,IAAMA,WAAW,GAAKC,OAAO,CAAPA,SAAO,CAAPA,CAAtB,WAAA,C,CAEA;AACA;;;AACA,IAAMC,GAAG,GAAT,yFAAA;AACA,IAAMC,MAAM,GAAZ,UAAA;AACA,IAAMC,cAAc,GAApB,QAAA;AACA,IAAA,UAAA;AAEAJ,WAAW,CAAXA,OAAAA,CAAAA,GAAAA,EAAyB,UAAA,GAAA,EAAA,MAAA,EAAuB;AAC5C,MAAA,GAAA,EAAS;AACLK,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,qCAAAA,EAAAA,GAAAA;AACH;;AACDA,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,cAAAA;AACAC,EAAAA,UAAU,GAAGC,MAAM,CAANA,EAAAA,CAAAA,MAAAA,EAAAA,UAAAA,CAAbD,cAAaC,CAAbD;AACAE,EAAAA,MAAM,GAAG,UAAU,CAAV,IAAA,CAAA,EAAA,EAAA,OAAA,CAA4B,UAAA,KAAA,EAAA,MAAA,EAAmB;AACpD,QAAA,KAAA,EAAW;AACP,aAAOC,MAAM,CAANA,MAAAA,CAAAA,GAAAA,EAAAA,IAAAA,CAAP,KAAOA,CAAP;AACH;;AACDJ,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,MAAAA;AAJJG,GAAS,CAATA;AANJR,CAAAA,E,CAcA;;AACAU,MAAM,CAANA,OAAAA,GAAiB,UAAA,GAAA,EAAc;AAE3B;AACA;AACA;AACAC,EAAAA,GAAG,CAAHA,GAAAA,CAAAA,QAAAA,EAAkB,UAAA,GAAA,EAAA,GAAA,EAAkB;AAEhC;AACA,QAAIC,KAAK,GAAGC,IAAI,CAAJA,IAAAA,CAAZ,EAAYA,CAAZ;AACAD,IAAAA,KAAK,CAALA,IAAAA,CAAW,UAAA,GAAA,EAAA,KAAA,EAAoB;AAC3B,UAAA,GAAA,EACIE,GAAG,CAAHA,IAAAA,CAFuB,GAEvBA,EAFuB,CAI3B;;AACAA,MAAAA,GAAG,CAAHA,IAAAA,CAAAA,KAAAA;AALJF,KAAAA;AATuB,GAK3BD,EAL2B,CAkB3B;AACA;AACA;;AACAA,EAAAA,GAAG,CAAHA,IAAAA,CAAAA,QAAAA,EAAmB,UAAA,GAAA,EAAA,GAAA,EAAkB;AAEjC;AACA,QAAII,OAAO,GAAG,IAAA,IAAA,CAASC,GAAG,CAHO,IAGnB,CAAd,CAHiC,CAKjC;;AACAD,IAAAA,OAAO,CAAPA,IAAAA,CAAa,UAAA,GAAA,EAAa;AACtB,UAAA,GAAA,EACID,GAAG,CAAHA,IAAAA,CAFkB,GAElBA,EAFkB,CAItB;;AACAA,MAAAA,GAAG,CAAHA,IAAAA,CAASE,GAAG,CAAZF,IAAAA;AALJC,KAAAA;AANJJ,GAAAA;AArBJD,CAAAA","sourcesContent":["\r\n// Dependencies\r\nconst MongoClient   = require(\"mongodb\").MongoClient;\r\n\r\n// Connect to MongoDB Atlas\r\n// -------------------------------------------------------\r\nconst url = \"mongodb+srv://Admin:mynameismypassport@cluster0-7xnng.mongodb.net/test?retryWrites=true\";\r\nconst dbName = \"Cluster0\";\r\nconst collectionName = \"Crimes\";\r\nvar collection;\r\n\r\nMongoClient.connect(url, function (err, client) {\r\n    if (err) {\r\n        console.log('Error connecting to MongoDB Atlas\\n', err);\r\n    }\r\n    console.log('Connected...');\r\n    collection = client.db(dbName).collection(collectionName);\r\n    crimes = collection.find({}).toArray((error, result) => {\r\n        if (error) {\r\n            return result.status(500).send(error);\r\n        }\r\n        console.log(result);\r\n    });\r\n});\r\n\r\n// Opens App Routes\r\nmodule.exports = function(app) {\r\n\r\n    // GET Routes\r\n    // --------------------------------------------------------\r\n    // Retrieve records for all users in the db\r\n    app.get('/users', function(req, res){\r\n\r\n        // Uses Mongoose schema to run the search (empty conditions)\r\n        var query = User.find({});\r\n        query.exec(function(err, users){\r\n            if(err)\r\n                res.send(err);\r\n\r\n            // If no errors are found, it responds with a JSON of all users\r\n            res.json(users);\r\n        });\r\n    });\r\n\r\n    // POST Routes\r\n    // --------------------------------------------------------\r\n    // Provides method for saving new users in the db\r\n    app.post('/users', function(req, res){\r\n\r\n        // Creates a new User based on the Mongoose schema and the post bo.dy\r\n        var newuser = new User(req.body);\r\n\r\n        // New User is saved in the db.\r\n        newuser.save(function(err){\r\n            if(err)\r\n                res.send(err);\r\n\r\n            // If no errors are found, it responds with a JSON of the new user\r\n            res.json(req.body);\r\n        });\r\n    });\r\n};"],"file":"routes.js"}